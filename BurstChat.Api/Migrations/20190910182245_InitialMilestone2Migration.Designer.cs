// <auto-generated />
using System;
using BurstChat.Shared.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BurstChat.Api.Migrations
{
    [DbContext(typeof(BurstChatContext))]
    [Migration("20190910182245_InitialMilestone2Migration")]
    partial class InitialMilestone2Migration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("BurstChat.Shared.Schema.Chat.Link", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated");

                    b.Property<long?>("MessageId");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.ToTable("Links");
                });

            modelBuilder.Entity("BurstChat.Shared.Schema.Chat.Message", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ChannelDetailsId");

                    b.Property<string>("Content");

                    b.Property<DateTime>("DatePosted");

                    b.Property<bool>("Edited");

                    b.Property<long?>("PrivateGroupMessageId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ChannelDetailsId");

                    b.HasIndex("PrivateGroupMessageId");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("BurstChat.Shared.Schema.Servers.Channel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated");

                    b.Property<int?>("DetailsId");

                    b.Property<bool>("IsPublic");

                    b.Property<string>("Name");

                    b.Property<int?>("ServerId");

                    b.HasKey("Id");

                    b.HasIndex("DetailsId");

                    b.HasIndex("ServerId");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("BurstChat.Shared.Schema.Servers.ChannelDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("ChannelDetails");
                });

            modelBuilder.Entity("BurstChat.Shared.Schema.Servers.Invitation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Accepted");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateUpdated");

                    b.Property<bool>("Declined");

                    b.Property<int>("ServerId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ServerId");

                    b.HasIndex("UserId");

                    b.ToTable("Invitations");
                });

            modelBuilder.Entity("BurstChat.Shared.Schema.Servers.Server", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Servers");
                });

            modelBuilder.Entity("BurstChat.Shared.Schema.Servers.Subscription", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ServerId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ServerId");

                    b.HasIndex("UserId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("BurstChat.Shared.Schema.Users.OneTimePassword", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<string>("OTP");

                    b.Property<long?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("OneTimePassword");
                });

            modelBuilder.Entity("BurstChat.Shared.Schema.Users.PrivateGroupMessage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("PrivateGroupMessage");
                });

            modelBuilder.Entity("BurstChat.Shared.Schema.Users.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ChannelDetailsId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<long?>("PrivateGroupMessageId");

                    b.HasKey("Id");

                    b.HasIndex("ChannelDetailsId");

                    b.HasIndex("PrivateGroupMessageId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BurstChat.Shared.Schema.Chat.Link", b =>
                {
                    b.HasOne("BurstChat.Shared.Schema.Chat.Message")
                        .WithMany("Links")
                        .HasForeignKey("MessageId");
                });

            modelBuilder.Entity("BurstChat.Shared.Schema.Chat.Message", b =>
                {
                    b.HasOne("BurstChat.Shared.Schema.Servers.ChannelDetails")
                        .WithMany("Messages")
                        .HasForeignKey("ChannelDetailsId");

                    b.HasOne("BurstChat.Shared.Schema.Users.PrivateGroupMessage")
                        .WithMany("Messages")
                        .HasForeignKey("PrivateGroupMessageId");

                    b.HasOne("BurstChat.Shared.Schema.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BurstChat.Shared.Schema.Servers.Channel", b =>
                {
                    b.HasOne("BurstChat.Shared.Schema.Servers.ChannelDetails", "Details")
                        .WithMany()
                        .HasForeignKey("DetailsId");

                    b.HasOne("BurstChat.Shared.Schema.Servers.Server")
                        .WithMany("Channels")
                        .HasForeignKey("ServerId");
                });

            modelBuilder.Entity("BurstChat.Shared.Schema.Servers.Invitation", b =>
                {
                    b.HasOne("BurstChat.Shared.Schema.Servers.Server", "Server")
                        .WithMany()
                        .HasForeignKey("ServerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BurstChat.Shared.Schema.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BurstChat.Shared.Schema.Servers.Subscription", b =>
                {
                    b.HasOne("BurstChat.Shared.Schema.Servers.Server")
                        .WithMany("Subscriptions")
                        .HasForeignKey("ServerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BurstChat.Shared.Schema.Users.User")
                        .WithMany("Subscriptions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BurstChat.Shared.Schema.Users.OneTimePassword", b =>
                {
                    b.HasOne("BurstChat.Shared.Schema.Users.User")
                        .WithMany("OneTimePasswords")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("BurstChat.Shared.Schema.Users.User", b =>
                {
                    b.HasOne("BurstChat.Shared.Schema.Servers.ChannelDetails")
                        .WithMany("Users")
                        .HasForeignKey("ChannelDetailsId");

                    b.HasOne("BurstChat.Shared.Schema.Users.PrivateGroupMessage")
                        .WithMany("Users")
                        .HasForeignKey("PrivateGroupMessageId");
                });
#pragma warning restore 612, 618
        }
    }
}
