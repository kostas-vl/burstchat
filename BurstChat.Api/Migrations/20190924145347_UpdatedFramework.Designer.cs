// <auto-generated />
using System;
using BurstChat.Shared.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BurstChat.Api.Migrations
{
    [DbContext(typeof(BurstChatContext))]
    [Migration("20190924145347_UpdatedFramework")]
    partial class UpdatedFramework
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0");

            modelBuilder.Entity("BurstChat.Shared.Schema.Chat.Link", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<long?>("MessageId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.ToTable("Links");
                });

            modelBuilder.Entity("BurstChat.Shared.Schema.Chat.Message", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ChannelDetailsId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DatePosted")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Edited")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("PrivateGroupMessageId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ChannelDetailsId");

                    b.HasIndex("PrivateGroupMessageId");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("BurstChat.Shared.Schema.Servers.Channel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<int?>("DetailsId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ServerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DetailsId");

                    b.HasIndex("ServerId");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("BurstChat.Shared.Schema.Servers.ChannelDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ChannelDetails");
                });

            modelBuilder.Entity("BurstChat.Shared.Schema.Servers.Invitation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Accepted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Declined")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ServerId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ServerId");

                    b.HasIndex("UserId");

                    b.ToTable("Invitations");
                });

            modelBuilder.Entity("BurstChat.Shared.Schema.Servers.Server", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Servers");
                });

            modelBuilder.Entity("BurstChat.Shared.Schema.Servers.Subscription", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ServerId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ServerId");

                    b.HasIndex("UserId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("BurstChat.Shared.Schema.Users.OneTimePassword", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("OTP")
                        .HasColumnType("TEXT");

                    b.Property<long?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("OneTimePassword");
                });

            modelBuilder.Entity("BurstChat.Shared.Schema.Users.PrivateGroupMessage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PrivateGroupMessage");
                });

            modelBuilder.Entity("BurstChat.Shared.Schema.Users.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ChannelDetailsId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<long?>("PrivateGroupMessageId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ChannelDetailsId");

                    b.HasIndex("PrivateGroupMessageId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BurstChat.Shared.Schema.Chat.Link", b =>
                {
                    b.HasOne("BurstChat.Shared.Schema.Chat.Message", null)
                        .WithMany("Links")
                        .HasForeignKey("MessageId");
                });

            modelBuilder.Entity("BurstChat.Shared.Schema.Chat.Message", b =>
                {
                    b.HasOne("BurstChat.Shared.Schema.Servers.ChannelDetails", null)
                        .WithMany("Messages")
                        .HasForeignKey("ChannelDetailsId");

                    b.HasOne("BurstChat.Shared.Schema.Users.PrivateGroupMessage", null)
                        .WithMany("Messages")
                        .HasForeignKey("PrivateGroupMessageId");

                    b.HasOne("BurstChat.Shared.Schema.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BurstChat.Shared.Schema.Servers.Channel", b =>
                {
                    b.HasOne("BurstChat.Shared.Schema.Servers.ChannelDetails", "Details")
                        .WithMany()
                        .HasForeignKey("DetailsId");

                    b.HasOne("BurstChat.Shared.Schema.Servers.Server", null)
                        .WithMany("Channels")
                        .HasForeignKey("ServerId");
                });

            modelBuilder.Entity("BurstChat.Shared.Schema.Servers.Invitation", b =>
                {
                    b.HasOne("BurstChat.Shared.Schema.Servers.Server", "Server")
                        .WithMany()
                        .HasForeignKey("ServerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BurstChat.Shared.Schema.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BurstChat.Shared.Schema.Servers.Subscription", b =>
                {
                    b.HasOne("BurstChat.Shared.Schema.Servers.Server", null)
                        .WithMany("Subscriptions")
                        .HasForeignKey("ServerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BurstChat.Shared.Schema.Users.User", null)
                        .WithMany("Subscriptions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BurstChat.Shared.Schema.Users.OneTimePassword", b =>
                {
                    b.HasOne("BurstChat.Shared.Schema.Users.User", null)
                        .WithMany("OneTimePasswords")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("BurstChat.Shared.Schema.Users.User", b =>
                {
                    b.HasOne("BurstChat.Shared.Schema.Servers.ChannelDetails", null)
                        .WithMany("Users")
                        .HasForeignKey("ChannelDetailsId");

                    b.HasOne("BurstChat.Shared.Schema.Users.PrivateGroupMessage", null)
                        .WithMany("Users")
                        .HasForeignKey("PrivateGroupMessageId");
                });
#pragma warning restore 612, 618
        }
    }
}
